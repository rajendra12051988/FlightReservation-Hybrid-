<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="4" ignored="0" total="10" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="558705" started-at="2018-10-29T07:02:42Z" finished-at="2018-10-29T07:12:01Z">
    <groups>
    </groups>
    <test name="chromeTest" duration-ms="207094" started-at="2018-10-29T07:02:42Z" finished-at="2018-10-29T07:06:09Z">
      <class name="testcases.executeTestThroughTestNg">
        <test-method status="PASS" signature="setUP(java.lang.String)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="setUP" is-config="true" duration-ms="8497" started-at="2018-10-29T07:02:42Z" finished-at="2018-10-29T07:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="startTestCase" is-config="true" duration-ms="15" started-at="2018-10-29T07:02:50Z" finished-at="2018-10-29T07:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testInvokeApplication() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="testInvokeApplication()[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="testInvokeApplication" duration-ms="8980" started-at="2018-10-29T07:02:50Z" finished-at="2018-10-29T07:02:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvokeApplication -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="generateReport" is-config="true" duration-ms="1252" started-at="2018-10-29T07:02:59Z" finished-at="2018-10-29T07:03:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvokeApplication status=SUCCESS method=executeTestThroughTestNg.testInvokeApplication()[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="testLogin()[pri:1, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="testLogin" duration-ms="179951" started-at="2018-10-29T07:03:01Z" finished-at="2018-10-29T07:06:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:03:01Z" finished-at="2018-10-29T07:03:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testLogin() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="generateReport" is-config="true" duration-ms="348" started-at="2018-10-29T07:06:01Z" finished-at="2018-10-29T07:06:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=executeTestThroughTestNg.testLogin()[pri:1, instance:testcases.executeTestThroughTestNg@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="testBookATicket()[pri:2, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="testBookATicket" duration-ms="6055" started-at="2018-10-29T07:06:01Z" finished-at="2018-10-29T07:06:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBookATicket -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:06:01Z" finished-at="2018-10-29T07:06:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testBookATicket() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="generateReport" is-config="true" duration-ms="360" started-at="2018-10-29T07:06:07Z" finished-at="2018-10-29T07:06:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBookATicket status=SUCCESS method=executeTestThroughTestNg.testBookATicket()[pri:2, instance:testcases.executeTestThroughTestNg@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="startTestCase" is-config="true" duration-ms="1" started-at="2018-10-29T07:06:07Z" finished-at="2018-10-29T07:06:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testFail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="FAIL" signature="testFail()[pri:3, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="testFail" duration-ms="4" started-at="2018-10-29T07:06:07Z" finished-at="2018-10-29T07:06:07Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at testcases.executeTestThroughTestNg.testFail(executeTestThroughTestNg.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFail -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="generateReport" is-config="true" duration-ms="361" started-at="2018-10-29T07:06:07Z" finished-at="2018-10-29T07:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFail status=FAILURE method=executeTestThroughTestNg.testFail()[pri:3, instance:testcases.executeTestThroughTestNg@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="generateReport" is-config="true" duration-ms="0" started-at="2018-10-29T07:06:08Z" finished-at="2018-10-29T07:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSKip status=SKIP method=executeTestThroughTestNg.testSKip()[pri:4, instance:testcases.executeTestThroughTestNg@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="tearDown" is-config="true" duration-ms="1244" started-at="2018-10-29T07:06:08Z" finished-at="2018-10-29T07:06:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:06:08Z" finished-at="2018-10-29T07:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testSKip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="SKIP" signature="testSKip()[pri:4, instance:testcases.executeTestThroughTestNg@4f7d0008]" name="testSKip" duration-ms="0" started-at="2018-10-29T07:06:08Z" finished-at="2018-10-29T07:06:08Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[This method is not ready to be executed]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: This method is not ready to be executed
at testcases.executeTestThroughTestNg.testSKip(executeTestThroughTestNg.java:186)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSKip -->
      </class> <!-- testcases.executeTestThroughTestNg -->
    </test> <!-- chromeTest -->
    <test name="firefoxTest" duration-ms="351567" started-at="2018-10-29T07:06:09Z" finished-at="2018-10-29T07:12:01Z">
      <class name="testcases.executeTestThroughTestNg">
        <test-method status="PASS" signature="setUP(java.lang.String)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="setUP" is-config="true" duration-ms="9965" started-at="2018-10-29T07:06:09Z" finished-at="2018-10-29T07:06:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUP -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:06:19Z" finished-at="2018-10-29T07:06:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testInvokeApplication() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="testInvokeApplication()[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="testInvokeApplication" duration-ms="2910" started-at="2018-10-29T07:06:19Z" finished-at="2018-10-29T07:06:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvokeApplication -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="generateReport" is-config="true" duration-ms="155" started-at="2018-10-29T07:06:22Z" finished-at="2018-10-29T07:06:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvokeApplication status=SUCCESS method=executeTestThroughTestNg.testInvokeApplication()[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:06:22Z" finished-at="2018-10-29T07:06:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testLogin() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="FAIL" signature="testLogin()[pri:1, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="testLogin" duration-ms="6928" started-at="2018-10-29T07:06:22Z" finished-at="2018-10-29T07:06:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at operation.UIOperation.assertPageTitle(UIOperation.java:38)
at testcases.executeTestThroughTestNg.testLogin(executeTestThroughTestNg.java:132)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="generateReport" is-config="true" duration-ms="125" started-at="2018-10-29T07:06:29Z" finished-at="2018-10-29T07:06:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=FAILURE method=executeTestThroughTestNg.testLogin()[pri:1, instance:testcases.executeTestThroughTestNg@5702b3b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:06:29Z" finished-at="2018-10-29T07:06:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testBookATicket() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="FAIL" signature="testBookATicket()[pri:2, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="testBookATicket" duration-ms="330838" started-at="2018-10-29T07:06:29Z" finished-at="2018-10-29T07:12:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at operation.UIOperation.verifyTextOnWebPage(UIOperation.java:101)
at testcases.executeTestThroughTestNg.testBookATicket(executeTestThroughTestNg.java:171)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBookATicket -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="generateReport" is-config="true" duration-ms="172" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBookATicket status=FAILURE method=executeTestThroughTestNg.testBookATicket()[pri:2, instance:testcases.executeTestThroughTestNg@5702b3b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="generateReport" is-config="true" duration-ms="109" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFail status=FAILURE method=executeTestThroughTestNg.testFail()[pri:3, instance:testcases.executeTestThroughTestNg@5702b3b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method status="FAIL" signature="testFail()[pri:3, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="testFail" duration-ms="0" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:00Z">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at testcases.executeTestThroughTestNg.testFail(executeTestThroughTestNg.java:180)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFail -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testFail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="startTestCase(java.lang.reflect.Method)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="startTestCase" is-config="true" duration-ms="0" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.executeTestThroughTestNg.testSKip()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestCase -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="tearDown" is-config="true" duration-ms="360" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="testSKip()[pri:4, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="testSKip" duration-ms="0" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:00Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[This method is not ready to be executed]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: This method is not ready to be executed
at testcases.executeTestThroughTestNg.testSKip(executeTestThroughTestNg.java:186)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSKip -->
        <test-method status="PASS" signature="generateReport(org.testng.ITestResult)[pri:0, instance:testcases.executeTestThroughTestNg@5702b3b1]" name="generateReport" is-config="true" duration-ms="0" started-at="2018-10-29T07:12:00Z" finished-at="2018-10-29T07:12:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSKip status=SKIP method=executeTestThroughTestNg.testSKip()[pri:4, instance:testcases.executeTestThroughTestNg@5702b3b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- testcases.executeTestThroughTestNg -->
    </test> <!-- firefoxTest -->
  </suite> <!-- Suite -->
</testng-results>
